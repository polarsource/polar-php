<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Operations;

use Polar\Models\Components;
use Polar\Utils\SpeakeasyMetadata;
class CustomerPortalBenefitGrantsListRequest
{
    /**
     * Filter by benefit type.
     *
     * @var Components\BenefitType|array<Components\BenefitType>|null $typeFilter
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public Components\BenefitType|array|null $typeFilter = null;

    /**
     * Filter by benefit ID.
     *
     * @var string|array<string>|null $benefitId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=benefit_id')]
    public string|array|null $benefitId = null;

    /**
     * Filter by organization ID.
     *
     * @var string|array<string>|null $organizationId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_id')]
    public string|array|null $organizationId = null;

    /**
     * Filter by checkout ID.
     *
     * @var string|array<string>|null $checkoutId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=checkout_id')]
    public string|array|null $checkoutId = null;

    /**
     * Filter by order ID.
     *
     * @var string|array<string>|null $orderId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_id')]
    public string|array|null $orderId = null;

    /**
     * Filter by subscription ID.
     *
     * @var string|array<string>|null $subscriptionId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=subscription_id')]
    public string|array|null $subscriptionId = null;

    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     *
     * @var ?array<Components\CustomerBenefitGrantSortProperty> $sorting
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sorting')]
    public ?array $sorting = null;

    /**
     * Page number, defaults to 1.
     *
     * @var ?int $page
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;

    /**
     * Size of a page, defaults to 10. Maximum is 100.
     *
     * @var ?int $limit
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;

    /**
     * @param  ?int  $page
     * @param  ?int  $limit
     * @param  Components\BenefitType|array<Components\BenefitType>|null  $typeFilter
     * @param  string|array<string>|null  $benefitId
     * @param  string|array<string>|null  $organizationId
     * @param  string|array<string>|null  $checkoutId
     * @param  string|array<string>|null  $orderId
     * @param  string|array<string>|null  $subscriptionId
     * @param  ?array<Components\CustomerBenefitGrantSortProperty>  $sorting
     * @phpstan-pure
     */
    public function __construct(Components\BenefitType|array|null $typeFilter = null, string|array|null $benefitId = null, string|array|null $organizationId = null, string|array|null $checkoutId = null, string|array|null $orderId = null, string|array|null $subscriptionId = null, ?array $sorting = null, ?int $page = 1, ?int $limit = 10)
    {
        $this->typeFilter = $typeFilter;
        $this->benefitId = $benefitId;
        $this->organizationId = $organizationId;
        $this->checkoutId = $checkoutId;
        $this->orderId = $orderId;
        $this->subscriptionId = $subscriptionId;
        $this->sorting = $sorting;
        $this->page = $page;
        $this->limit = $limit;
    }
}