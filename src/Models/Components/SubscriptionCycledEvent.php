<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** SubscriptionCycledEvent - An event created by Polar when a subscription is cycled. */
class SubscriptionCycledEvent
{
    /**
     * The ID of the object.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The timestamp of the event.
     *
     * @var \DateTime $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    public \DateTime $timestamp;

    /**
     * The ID of the organization owning the event.
     *
     * @var string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('organization_id')]
    public string $organizationId;

    /**
     *
     * @var SubscriptionCycledMetadata $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\SubscriptionCycledMetadata')]
    public SubscriptionCycledMetadata $metadata;

    /**
     * ID of the customer in your Polar organization associated with the event.
     *
     * @var ?string $customerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_id')]
    public ?string $customerId;

    /**
     * The customer associated with the event.
     *
     * @var ?Customer $customer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\Customer|null')]
    public ?Customer $customer;

    /**
     * ID of the customer in your system associated with the event.
     *
     * @var ?string $externalCustomerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_customer_id')]
    public ?string $externalCustomerId;

    /**
     * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.
     *
     * @var string $source
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('source')]
    public string $source;

    /**
     * The name of the event.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     * @param  string  $id
     * @param  \DateTime  $timestamp
     * @param  string  $organizationId
     * @param  string  $source
     * @param  string  $name
     * @param  SubscriptionCycledMetadata  $metadata
     * @param  ?string  $customerId
     * @param  ?Customer  $customer
     * @param  ?string  $externalCustomerId
     * @phpstan-pure
     */
    public function __construct(string $id, \DateTime $timestamp, string $organizationId, SubscriptionCycledMetadata $metadata, ?string $customerId = null, ?Customer $customer = null, ?string $externalCustomerId = null, string $source = 'system', string $name = 'subscription.cycled')
    {
        $this->id = $id;
        $this->timestamp = $timestamp;
        $this->organizationId = $organizationId;
        $this->metadata = $metadata;
        $this->customerId = $customerId;
        $this->customer = $customer;
        $this->externalCustomerId = $externalCustomerId;
        $this->source = $source;
        $this->name = $name;
    }
}