<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


class CustomerOrder
{
    /**
     * The ID of the object.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Creation timestamp of the object.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     *
     * @var OrderStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\OrderStatus')]
    public OrderStatus $status;

    /**
     * Whether the order has been paid for.
     *
     * @var bool $paid
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('paid')]
    public bool $paid;

    /**
     * Amount in cents, before discounts and taxes.
     *
     * @var int $subtotalAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subtotal_amount')]
    public int $subtotalAmount;

    /**
     * Discount amount in cents.
     *
     * @var int $discountAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('discount_amount')]
    public int $discountAmount;

    /**
     * Amount in cents, after discounts but before taxes.
     *
     * @var int $netAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('net_amount')]
    public int $netAmount;

    /**
     * Sales tax amount in cents.
     *
     * @var int $taxAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_amount')]
    public int $taxAmount;

    /**
     * Amount in cents, after discounts and taxes.
     *
     * @var int $totalAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_amount')]
    public int $totalAmount;

    /**
     * Customer's balance amount applied to this invoice. Can increase the total amount paid, if the customer has a negative balance,  or decrease it, if the customer has a positive balance.Amount in cents.
     *
     * @var int $appliedBalanceAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('applied_balance_amount')]
    public int $appliedBalanceAmount;

    /**
     * Amount in cents that is due for this order.
     *
     * @var int $dueAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('due_amount')]
    public int $dueAmount;

    /**
     * Amount refunded in cents.
     *
     * @var int $refundedAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refunded_amount')]
    public int $refundedAmount;

    /**
     * Sales tax refunded in cents.
     *
     * @var int $refundedTaxAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refunded_tax_amount')]
    public int $refundedTaxAmount;

    /**
     *
     * @var string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    public string $currency;

    /**
     *
     * @var OrderBillingReason $billingReason
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('billing_reason')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\OrderBillingReason')]
    public OrderBillingReason $billingReason;

    /**
     * The invoice number associated with this order.
     *
     * @var string $invoiceNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('invoice_number')]
    public string $invoiceNumber;

    /**
     * Whether an invoice has been generated for this order.
     *
     * @var bool $isInvoiceGenerated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_invoice_generated')]
    public bool $isInvoiceGenerated;

    /**
     *
     * @var string $customerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_id')]
    public string $customerId;

    /**
     *
     * @var string $productId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_id')]
    public string $productId;

    /**
     *
     * @var string $userId
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('user_id')]
    public string $userId;

    /**
     *
     * @var CustomerOrderProduct $product
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\CustomerOrderProduct')]
    public CustomerOrderProduct $product;

    /**
     * Line items composing the order.
     *
     * @var array<OrderItemSchema> $items
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Polar\Models\Components\OrderItemSchema>')]
    public array $items;

    /**
     * Last modification timestamp of the object.
     *
     * @var ?\DateTime $modifiedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modified_at')]
    public ?\DateTime $modifiedAt;

    /**
     * The name of the customer that should appear on the invoice. 
     *
     * @var ?string $billingName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('billing_name')]
    public ?string $billingName;

    /**
     *
     * @var ?Address $billingAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('billing_address')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\Address|null')]
    public ?Address $billingAddress;

    /**
     *
     * @var ?string $discountId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('discount_id')]
    public ?string $discountId;

    /**
     *
     * @var ?string $subscriptionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscription_id')]
    public ?string $subscriptionId;

    /**
     *
     * @var ?string $checkoutId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('checkout_id')]
    public ?string $checkoutId;

    /**
     *
     * @var ?CustomerOrderSubscription $subscription
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscription')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\CustomerOrderSubscription|null')]
    public ?CustomerOrderSubscription $subscription;

    /**
     * When the next payment retry is scheduled
     *
     * @var ?\DateTime $nextPaymentAttemptAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('next_payment_attempt_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $nextPaymentAttemptAt = null;

    /**
     * @param  string  $id
     * @param  \DateTime  $createdAt
     * @param  OrderStatus  $status
     * @param  bool  $paid
     * @param  int  $subtotalAmount
     * @param  int  $discountAmount
     * @param  int  $netAmount
     * @param  int  $taxAmount
     * @param  int  $totalAmount
     * @param  int  $appliedBalanceAmount
     * @param  int  $dueAmount
     * @param  int  $refundedAmount
     * @param  int  $refundedTaxAmount
     * @param  string  $currency
     * @param  OrderBillingReason  $billingReason
     * @param  string  $invoiceNumber
     * @param  bool  $isInvoiceGenerated
     * @param  string  $customerId
     * @param  string  $productId
     * @param  string  $userId
     * @param  CustomerOrderProduct  $product
     * @param  array<OrderItemSchema>  $items
     * @param  ?\DateTime  $modifiedAt
     * @param  ?string  $billingName
     * @param  ?Address  $billingAddress
     * @param  ?string  $discountId
     * @param  ?string  $subscriptionId
     * @param  ?string  $checkoutId
     * @param  ?CustomerOrderSubscription  $subscription
     * @param  ?\DateTime  $nextPaymentAttemptAt
     * @phpstan-pure
     */
    public function __construct(string $id, \DateTime $createdAt, OrderStatus $status, bool $paid, int $subtotalAmount, int $discountAmount, int $netAmount, int $taxAmount, int $totalAmount, int $appliedBalanceAmount, int $dueAmount, int $refundedAmount, int $refundedTaxAmount, string $currency, OrderBillingReason $billingReason, string $invoiceNumber, bool $isInvoiceGenerated, string $customerId, string $productId, string $userId, CustomerOrderProduct $product, array $items, ?\DateTime $modifiedAt = null, ?string $billingName = null, ?Address $billingAddress = null, ?string $discountId = null, ?string $subscriptionId = null, ?string $checkoutId = null, ?CustomerOrderSubscription $subscription = null, ?\DateTime $nextPaymentAttemptAt = null)
    {
        $this->id = $id;
        $this->createdAt = $createdAt;
        $this->status = $status;
        $this->paid = $paid;
        $this->subtotalAmount = $subtotalAmount;
        $this->discountAmount = $discountAmount;
        $this->netAmount = $netAmount;
        $this->taxAmount = $taxAmount;
        $this->totalAmount = $totalAmount;
        $this->appliedBalanceAmount = $appliedBalanceAmount;
        $this->dueAmount = $dueAmount;
        $this->refundedAmount = $refundedAmount;
        $this->refundedTaxAmount = $refundedTaxAmount;
        $this->currency = $currency;
        $this->billingReason = $billingReason;
        $this->invoiceNumber = $invoiceNumber;
        $this->isInvoiceGenerated = $isInvoiceGenerated;
        $this->customerId = $customerId;
        $this->productId = $productId;
        $this->userId = $userId;
        $this->product = $product;
        $this->items = $items;
        $this->modifiedAt = $modifiedAt;
        $this->billingName = $billingName;
        $this->billingAddress = $billingAddress;
        $this->discountId = $discountId;
        $this->subscriptionId = $subscriptionId;
        $this->checkoutId = $checkoutId;
        $this->subscription = $subscription;
        $this->nextPaymentAttemptAt = $nextPaymentAttemptAt;
    }
}