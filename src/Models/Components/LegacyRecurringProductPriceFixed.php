<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/**
 * LegacyRecurringProductPriceFixed - A recurring price for a product, i.e. a subscription.
 *
 *
 * **Deprecated**: The recurring interval should be set on the product itself.
 */
class LegacyRecurringProductPriceFixed
{
    /**
     * Creation timestamp of the object.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The ID of the price.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Whether the price is archived and no longer available.
     *
     * @var bool $isArchived
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_archived')]
    public bool $isArchived;

    /**
     * The ID of the product owning the price.
     *
     * @var string $productId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_id')]
    public string $productId;

    /**
     *
     * @var SubscriptionRecurringInterval $recurringInterval
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('recurring_interval')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\SubscriptionRecurringInterval')]
    public SubscriptionRecurringInterval $recurringInterval;

    /**
     * The currency.
     *
     * @var string $priceCurrency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('price_currency')]
    public string $priceCurrency;

    /**
     * The price in cents.
     *
     * @var int $priceAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('price_amount')]
    public int $priceAmount;

    /**
     * Last modification timestamp of the object.
     *
     * @var ?\DateTime $modifiedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modified_at')]
    public ?\DateTime $modifiedAt;

    /**
     *
     * @var string $amountType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount_type')]
    public string $amountType;

    /**
     * The type of the price.
     *
     * @var string $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    public string $type;

    /**
     *
     * @var bool $legacy
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('legacy')]
    public bool $legacy;

    /**
     * @param  \DateTime  $createdAt
     * @param  string  $id
     * @param  string  $amountType
     * @param  bool  $isArchived
     * @param  string  $productId
     * @param  string  $type
     * @param  SubscriptionRecurringInterval  $recurringInterval
     * @param  string  $priceCurrency
     * @param  int  $priceAmount
     * @param  bool  $legacy
     * @param  ?\DateTime  $modifiedAt
     * @phpstan-pure
     */
    public function __construct(\DateTime $createdAt, string $id, bool $isArchived, string $productId, SubscriptionRecurringInterval $recurringInterval, string $priceCurrency, int $priceAmount, ?\DateTime $modifiedAt = null, string $amountType = 'fixed', string $type = 'recurring', bool $legacy = true)
    {
        $this->createdAt = $createdAt;
        $this->id = $id;
        $this->isArchived = $isArchived;
        $this->productId = $productId;
        $this->recurringInterval = $recurringInterval;
        $this->priceCurrency = $priceCurrency;
        $this->priceAmount = $priceAmount;
        $this->modifiedAt = $modifiedAt;
        $this->amountType = $amountType;
        $this->type = $type;
        $this->legacy = $legacy;
    }
}