<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** DiscountUpdate - Schema to update a discount. */
class DiscountUpdate
{
    /**
     * Key-value object allowing you to store additional information.
     *
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     *
     * @var ?array<string, string|int|float|bool> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, string|int|float|bool>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API.
     *
     * @var ?string $code
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $code = null;

    /**
     * Optional timestamp after which the discount is redeemable.
     *
     * @var ?\DateTime $startsAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('starts_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $startsAt = null;

    /**
     * Optional timestamp after which the discount is no longer redeemable.
     *
     * @var ?\DateTime $endsAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('ends_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $endsAt = null;

    /**
     * Optional maximum number of times the discount can be redeemed.
     *
     * @var ?int $maxRedemptions
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('max_redemptions')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $maxRedemptions = null;

    /**
     *
     * @var ?DiscountDuration $duration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duration')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\DiscountDuration|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DiscountDuration $duration = null;

    /**
     *
     * @var ?int $durationInMonths
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duration_in_months')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $durationInMonths = null;

    /**
     *
     * @var ?DiscountType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\DiscountType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DiscountType $type = null;

    /**
     *
     * @var ?int $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $amount = null;

    /**
     *
     * @var ?string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $currency = null;

    /**
     *
     * @var ?int $basisPoints
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('basis_points')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $basisPoints = null;

    /**
     * $products
     *
     * @var ?array<string> $products
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('products')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $products = null;

    /**
     * @param  ?array<string, string|int|float|bool>  $metadata
     * @param  ?string  $name
     * @param  ?string  $code
     * @param  ?\DateTime  $startsAt
     * @param  ?\DateTime  $endsAt
     * @param  ?int  $maxRedemptions
     * @param  ?DiscountDuration  $duration
     * @param  ?int  $durationInMonths
     * @param  ?DiscountType  $type
     * @param  ?int  $amount
     * @param  ?string  $currency
     * @param  ?int  $basisPoints
     * @param  ?array<string>  $products
     * @phpstan-pure
     */
    public function __construct(?array $metadata = null, ?string $name = null, ?string $code = null, ?\DateTime $startsAt = null, ?\DateTime $endsAt = null, ?int $maxRedemptions = null, ?DiscountDuration $duration = null, ?int $durationInMonths = null, ?DiscountType $type = null, ?int $amount = null, ?string $currency = null, ?int $basisPoints = null, ?array $products = null)
    {
        $this->metadata = $metadata;
        $this->name = $name;
        $this->code = $code;
        $this->startsAt = $startsAt;
        $this->endsAt = $endsAt;
        $this->maxRedemptions = $maxRedemptions;
        $this->duration = $duration;
        $this->durationInMonths = $durationInMonths;
        $this->type = $type;
        $this->amount = $amount;
        $this->currency = $currency;
        $this->basisPoints = $basisPoints;
        $this->products = $products;
    }
}