<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** CustomerOrderConfirmPayment - Schema to confirm a retry payment using either a saved payment method or a new confirmation token. */
class CustomerOrderConfirmPayment
{
    /**
     *
     * @var ?PaymentProcessor $paymentProcessor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_processor')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\PaymentProcessor|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PaymentProcessor $paymentProcessor = null;

    /**
     * ID of the Stripe confirmation token for new payment methods.
     *
     * @var ?string $confirmationTokenId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('confirmation_token_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $confirmationTokenId = null;

    /**
     * ID of an existing saved payment method.
     *
     * @var ?string $paymentMethodId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_method_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $paymentMethodId = null;

    /**
     * @param  ?PaymentProcessor  $paymentProcessor
     * @param  ?string  $confirmationTokenId
     * @param  ?string  $paymentMethodId
     * @phpstan-pure
     */
    public function __construct(?PaymentProcessor $paymentProcessor = null, ?string $confirmationTokenId = null, ?string $paymentMethodId = null)
    {
        $this->paymentProcessor = $paymentProcessor;
        $this->confirmationTokenId = $confirmationTokenId;
        $this->paymentMethodId = $paymentMethodId;
    }
}