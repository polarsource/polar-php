<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** ProductUpdate - Schema to update a product. */
class ProductUpdate
{
    /**
     * Key-value object allowing you to store additional information.
     *
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be either:
     *
     * * A string with a maximum length of **500 characters**
     * * An integer
     * * A floating-point number
     * * A boolean
     *
     * You can store up to **50 key-value pairs**.
     *
     * @var ?array<string, string|int|float|bool> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, string|int|float|bool>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     * The interval unit for the trial period.
     *
     * @var ?TrialInterval $trialInterval
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('trial_interval')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\TrialInterval|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TrialInterval $trialInterval = null;

    /**
     * The number of interval units for the trial period.
     *
     * @var ?int $trialIntervalCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('trial_interval_count')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $trialIntervalCount = null;

    /**
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * The description of the product.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * The recurring interval of the product. If `None`, the product is a one-time purchase. **Can only be set on legacy recurring products. Once set, it can't be changed.**
     *
     * @var ?SubscriptionRecurringInterval $recurringInterval
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('recurring_interval')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\SubscriptionRecurringInterval|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SubscriptionRecurringInterval $recurringInterval = null;

    /**
     * Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally.
     *
     * @var ?bool $isArchived
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_archived')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isArchived = null;

    /**
     * List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object.
     *
     * @var ?array<ExistingProductPrice|ProductPriceFixedCreate|ProductPriceCustomCreate|ProductPriceFreeCreate|ProductPriceSeatBasedCreate|ProductPriceMeteredUnitCreate> $prices
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('prices')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Polar\Models\Components\ExistingProductPrice|\Polar\Models\Components\ProductPriceFixedCreate|\Polar\Models\Components\ProductPriceCustomCreate|\Polar\Models\Components\ProductPriceFreeCreate|\Polar\Models\Components\ProductPriceSeatBasedCreate|\Polar\Models\Components\ProductPriceMeteredUnitCreate>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $prices = null;

    /**
     * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
     *
     * @var ?array<string> $medias
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('medias')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $medias = null;

    /**
     * $attachedCustomFields
     *
     * @var ?array<AttachedCustomFieldCreate> $attachedCustomFields
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('attached_custom_fields')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Polar\Models\Components\AttachedCustomFieldCreate>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $attachedCustomFields = null;

    /**
     * @param  ?array<string, string|int|float|bool>  $metadata
     * @param  ?TrialInterval  $trialInterval
     * @param  ?int  $trialIntervalCount
     * @param  ?string  $name
     * @param  ?string  $description
     * @param  ?SubscriptionRecurringInterval  $recurringInterval
     * @param  ?bool  $isArchived
     * @param  ?array<ExistingProductPrice|ProductPriceFixedCreate|ProductPriceCustomCreate|ProductPriceFreeCreate|ProductPriceSeatBasedCreate|ProductPriceMeteredUnitCreate>  $prices
     * @param  ?array<string>  $medias
     * @param  ?array<AttachedCustomFieldCreate>  $attachedCustomFields
     * @phpstan-pure
     */
    public function __construct(?array $metadata = null, ?TrialInterval $trialInterval = null, ?int $trialIntervalCount = null, ?string $name = null, ?string $description = null, ?SubscriptionRecurringInterval $recurringInterval = null, ?bool $isArchived = null, ?array $prices = null, ?array $medias = null, ?array $attachedCustomFields = null)
    {
        $this->metadata = $metadata;
        $this->trialInterval = $trialInterval;
        $this->trialIntervalCount = $trialIntervalCount;
        $this->name = $name;
        $this->description = $description;
        $this->recurringInterval = $recurringInterval;
        $this->isArchived = $isArchived;
        $this->prices = $prices;
        $this->medias = $medias;
        $this->attachedCustomFields = $attachedCustomFields;
    }
}