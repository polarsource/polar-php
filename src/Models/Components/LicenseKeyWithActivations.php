<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


class LicenseKeyWithActivations
{
    /**
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     *
     * @var string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('organization_id')]
    public string $organizationId;

    /**
     *
     * @var string $userId
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('user_id')]
    public string $userId;

    /**
     *
     * @var string $customerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_id')]
    public string $customerId;

    /**
     *
     * @var LicenseKeyUser $user
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('user')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\LicenseKeyUser')]
    public LicenseKeyUser $user;

    /**
     *
     * @var LicenseKeyCustomer $customer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\LicenseKeyCustomer')]
    public LicenseKeyCustomer $customer;

    /**
     * The benefit ID.
     *
     * @var string $benefitId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('benefit_id')]
    public string $benefitId;

    /**
     *
     * @var string $key
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('key')]
    public string $key;

    /**
     *
     * @var string $displayKey
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('display_key')]
    public string $displayKey;

    /**
     *
     * @var LicenseKeyStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\LicenseKeyStatus')]
    public LicenseKeyStatus $status;

    /**
     *
     * @var int $usage
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('usage')]
    public int $usage;

    /**
     *
     * @var int $validations
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('validations')]
    public int $validations;

    /**
     * $activations
     *
     * @var array<LicenseKeyActivationBase> $activations
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('activations')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Polar\Models\Components\LicenseKeyActivationBase>')]
    public array $activations;

    /**
     *
     * @var ?int $limitActivations
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('limit_activations')]
    public ?int $limitActivations;

    /**
     *
     * @var ?int $limitUsage
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('limit_usage')]
    public ?int $limitUsage;

    /**
     *
     * @var ?\DateTime $lastValidatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_validated_at')]
    public ?\DateTime $lastValidatedAt;

    /**
     *
     * @var ?\DateTime $expiresAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_at')]
    public ?\DateTime $expiresAt;

    /**
     * @param  string  $id
     * @param  string  $organizationId
     * @param  string  $userId
     * @param  string  $customerId
     * @param  LicenseKeyUser  $user
     * @param  LicenseKeyCustomer  $customer
     * @param  string  $benefitId
     * @param  string  $key
     * @param  string  $displayKey
     * @param  LicenseKeyStatus  $status
     * @param  int  $usage
     * @param  int  $validations
     * @param  array<LicenseKeyActivationBase>  $activations
     * @param  ?int  $limitActivations
     * @param  ?int  $limitUsage
     * @param  ?\DateTime  $lastValidatedAt
     * @param  ?\DateTime  $expiresAt
     * @phpstan-pure
     */
    public function __construct(string $id, string $organizationId, string $userId, string $customerId, LicenseKeyUser $user, LicenseKeyCustomer $customer, string $benefitId, string $key, string $displayKey, LicenseKeyStatus $status, int $usage, int $validations, array $activations, ?int $limitActivations = null, ?int $limitUsage = null, ?\DateTime $lastValidatedAt = null, ?\DateTime $expiresAt = null)
    {
        $this->id = $id;
        $this->organizationId = $organizationId;
        $this->userId = $userId;
        $this->customerId = $customerId;
        $this->user = $user;
        $this->customer = $customer;
        $this->benefitId = $benefitId;
        $this->key = $key;
        $this->displayKey = $displayKey;
        $this->status = $status;
        $this->usage = $usage;
        $this->validations = $validations;
        $this->activations = $activations;
        $this->limitActivations = $limitActivations;
        $this->limitUsage = $limitUsage;
        $this->lastValidatedAt = $lastValidatedAt;
        $this->expiresAt = $expiresAt;
    }
}