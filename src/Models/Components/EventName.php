<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


class EventName
{
    /**
     * The name of the event.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     *
     * @var EventSource $source
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('source')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\EventSource')]
    public EventSource $source;

    /**
     * Number of times the event has occurred.
     *
     * @var int $occurrences
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('occurrences')]
    public int $occurrences;

    /**
     * The first time the event occurred.
     *
     * @var \DateTime $firstSeen
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('first_seen')]
    public \DateTime $firstSeen;

    /**
     * The last time the event occurred.
     *
     * @var \DateTime $lastSeen
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_seen')]
    public \DateTime $lastSeen;

    /**
     * @param  string  $name
     * @param  EventSource  $source
     * @param  int  $occurrences
     * @param  \DateTime  $firstSeen
     * @param  \DateTime  $lastSeen
     * @phpstan-pure
     */
    public function __construct(string $name, EventSource $source, int $occurrences, \DateTime $firstSeen, \DateTime $lastSeen)
    {
        $this->name = $name;
        $this->source = $source;
        $this->occurrences = $occurrences;
        $this->firstSeen = $firstSeen;
        $this->lastSeen = $lastSeen;
    }
}