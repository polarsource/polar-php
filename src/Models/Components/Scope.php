<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


enum Scope: string
{
    case Openid = 'openid';
    case Profile = 'profile';
    case Email = 'email';
    case UserRead = 'user:read';
    case Admin = 'admin';
    case WebDefault = 'web_default';
    case OrganizationsRead = 'organizations:read';
    case OrganizationsWrite = 'organizations:write';
    case CustomFieldsRead = 'custom_fields:read';
    case CustomFieldsWrite = 'custom_fields:write';
    case DiscountsRead = 'discounts:read';
    case DiscountsWrite = 'discounts:write';
    case CheckoutLinksRead = 'checkout_links:read';
    case CheckoutLinksWrite = 'checkout_links:write';
    case CheckoutsRead = 'checkouts:read';
    case CheckoutsWrite = 'checkouts:write';
    case ProductsRead = 'products:read';
    case ProductsWrite = 'products:write';
    case BenefitsRead = 'benefits:read';
    case BenefitsWrite = 'benefits:write';
    case EventsRead = 'events:read';
    case EventsWrite = 'events:write';
    case MetersRead = 'meters:read';
    case MetersWrite = 'meters:write';
    case FilesRead = 'files:read';
    case FilesWrite = 'files:write';
    case SubscriptionsRead = 'subscriptions:read';
    case SubscriptionsWrite = 'subscriptions:write';
    case CustomersRead = 'customers:read';
    case CustomersWrite = 'customers:write';
    case CustomerMetersRead = 'customer_meters:read';
    case CustomerSessionsWrite = 'customer_sessions:write';
    case OrdersRead = 'orders:read';
    case RefundsRead = 'refunds:read';
    case RefundsWrite = 'refunds:write';
    case PaymentsRead = 'payments:read';
    case MetricsRead = 'metrics:read';
    case WebhooksRead = 'webhooks:read';
    case WebhooksWrite = 'webhooks:write';
    case ExternalOrganizationsRead = 'external_organizations:read';
    case LicenseKeysRead = 'license_keys:read';
    case LicenseKeysWrite = 'license_keys:write';
    case RepositoriesRead = 'repositories:read';
    case RepositoriesWrite = 'repositories:write';
    case IssuesRead = 'issues:read';
    case IssuesWrite = 'issues:write';
    case CustomerPortalRead = 'customer_portal:read';
    case CustomerPortalWrite = 'customer_portal:write';
    case NotificationRecipientsRead = 'notification_recipients:read';
    case NotificationRecipientsWrite = 'notification_recipients:write';
}
