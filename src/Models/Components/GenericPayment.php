<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** GenericPayment - Schema of a payment with a generic payment method. */
class GenericPayment
{
    /**
     * Creation timestamp of the object.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The ID of the object.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     *
     * @var PaymentProcessor $processor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('processor')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\PaymentProcessor')]
    public PaymentProcessor $processor;

    /**
     *
     * @var PaymentStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\PaymentStatus')]
    public PaymentStatus $status;

    /**
     * The payment amount in cents.
     *
     * @var int $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public int $amount;

    /**
     * The payment currency. Currently, only `usd` is supported.
     *
     * @var string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    public string $currency;

    /**
     * The payment method used.
     *
     * @var string $method
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('method')]
    public string $method;

    /**
     * The ID of the organization that owns the payment.
     *
     * @var string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('organization_id')]
    public string $organizationId;

    /**
     * Last modification timestamp of the object.
     *
     * @var ?\DateTime $modifiedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modified_at')]
    public ?\DateTime $modifiedAt;

    /**
     * Error code, if the payment was declined.
     *
     * @var ?string $declineReason
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('decline_reason')]
    public ?string $declineReason;

    /**
     * Human-reasable error message, if the payment was declined.
     *
     * @var ?string $declineMessage
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('decline_message')]
    public ?string $declineMessage;

    /**
     * The ID of the checkout session associated with this payment.
     *
     * @var ?string $checkoutId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('checkout_id')]
    public ?string $checkoutId;

    /**
     * The ID of the order associated with this payment.
     *
     * @var ?string $orderId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('order_id')]
    public ?string $orderId;

    /**
     * @param  \DateTime  $createdAt
     * @param  string  $id
     * @param  PaymentProcessor  $processor
     * @param  PaymentStatus  $status
     * @param  int  $amount
     * @param  string  $currency
     * @param  string  $method
     * @param  string  $organizationId
     * @param  ?\DateTime  $modifiedAt
     * @param  ?string  $declineReason
     * @param  ?string  $declineMessage
     * @param  ?string  $checkoutId
     * @param  ?string  $orderId
     * @phpstan-pure
     */
    public function __construct(\DateTime $createdAt, string $id, PaymentProcessor $processor, PaymentStatus $status, int $amount, string $currency, string $method, string $organizationId, ?\DateTime $modifiedAt = null, ?string $declineReason = null, ?string $declineMessage = null, ?string $checkoutId = null, ?string $orderId = null)
    {
        $this->createdAt = $createdAt;
        $this->id = $id;
        $this->processor = $processor;
        $this->status = $status;
        $this->amount = $amount;
        $this->currency = $currency;
        $this->method = $method;
        $this->organizationId = $organizationId;
        $this->modifiedAt = $modifiedAt;
        $this->declineReason = $declineReason;
        $this->declineMessage = $declineMessage;
        $this->checkoutId = $checkoutId;
        $this->orderId = $orderId;
    }
}