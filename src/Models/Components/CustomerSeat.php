<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


class CustomerSeat
{
    /**
     * Creation timestamp of the object.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The seat ID
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The subscription ID
     *
     * @var string $subscriptionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscription_id')]
    public string $subscriptionId;

    /**
     *
     * @var SeatStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\SeatStatus')]
    public SeatStatus $status;

    /**
     * Last modification timestamp of the object.
     *
     * @var ?\DateTime $modifiedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modified_at')]
    public ?\DateTime $modifiedAt;

    /**
     * The assigned customer ID
     *
     * @var ?string $customerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerId = null;

    /**
     * The assigned customer email
     *
     * @var ?string $customerEmail
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer_email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerEmail = null;

    /**
     * When the invitation token expires
     *
     * @var ?\DateTime $invitationTokenExpiresAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('invitation_token_expires_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $invitationTokenExpiresAt = null;

    /**
     * When the seat was claimed
     *
     * @var ?\DateTime $claimedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('claimed_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $claimedAt = null;

    /**
     * When the seat was revoked
     *
     * @var ?\DateTime $revokedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('revoked_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $revokedAt = null;

    /**
     * Additional metadata for the seat
     *
     * @var ?array<string, mixed> $seatMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('seat_metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $seatMetadata = null;

    /**
     * @param  \DateTime  $createdAt
     * @param  string  $id
     * @param  string  $subscriptionId
     * @param  SeatStatus  $status
     * @param  ?\DateTime  $modifiedAt
     * @param  ?string  $customerId
     * @param  ?string  $customerEmail
     * @param  ?\DateTime  $invitationTokenExpiresAt
     * @param  ?\DateTime  $claimedAt
     * @param  ?\DateTime  $revokedAt
     * @param  ?array<string, mixed>  $seatMetadata
     * @phpstan-pure
     */
    public function __construct(\DateTime $createdAt, string $id, string $subscriptionId, SeatStatus $status, ?\DateTime $modifiedAt = null, ?string $customerId = null, ?string $customerEmail = null, ?\DateTime $invitationTokenExpiresAt = null, ?\DateTime $claimedAt = null, ?\DateTime $revokedAt = null, ?array $seatMetadata = null)
    {
        $this->createdAt = $createdAt;
        $this->id = $id;
        $this->subscriptionId = $subscriptionId;
        $this->status = $status;
        $this->modifiedAt = $modifiedAt;
        $this->customerId = $customerId;
        $this->customerEmail = $customerEmail;
        $this->invitationTokenExpiresAt = $invitationTokenExpiresAt;
        $this->claimedAt = $claimedAt;
        $this->revokedAt = $revokedAt;
        $this->seatMetadata = $seatMetadata;
    }
}